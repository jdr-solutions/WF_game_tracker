name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-lint:
    name: Run Tests & Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Dependencies
        run: |
          python -m venv venv
          venv/bin/pip install -r requirements.txt
          # Install xvfb and python3-tk if running locally with act
          if [ "$ACT" = "true" ]; then
            sudo apt-get update && sudo apt-get install -y xvfb python3-tk
          fi

      - name: Check Formatting (Black)
        run: venv/bin/black --check .

      - name: Run Linting (Flake8)
        run: venv/bin/flake8 .

      - name: Run Tests with Virtual Display
        run: xvfb-run --auto-servernum venv/bin/pytest -v

  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Create Virtual Environment and Install Dependencies
        run: |
          python -m venv venv
          venv\Scripts\pip install -r requirements.txt
          venv\Scripts\pip install pyinstaller

      - name: Build Executable
        run: |
          venv\Scripts\pyinstaller --onefile --windowed --name wftracker run.py

      - name: Archive Windows Executable
        uses: actions/upload-artifact@v4.6.0
        with:
          name: wftracker
          path: dist\wftracker.exe
